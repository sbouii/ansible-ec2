- name: Launch ec2 instance and provision it
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - vars/aws-credentials.yml
    - vars/aws-environment.yml
  tasks:
  - name: Create security group for the ec2 instance
    ec2_group: 
      name: "{{ item.name }}"
      description: "{{ item.desc }}"
      rules: "{{ item.rules }}"
      region: "{{ ec2_region }}"
      # access_key and secret_key are used for making API calls (it's not your password for signing in)
      ec2_access_key: "{{ ec2_access_key }}"
      ec2_secret_key: "{{ ec2_secret_key }}"
    with_items: security_groups

  - name: Launch the ec2-classic instance
    ec2:
     region: "{{ ec2_region }}"
     ec2_access_key: "{{ ec2_access_key }}"
     ec2_secret_key: "{{ ec2_secret_key }}"
     # use a key_pair of private key and public one for ssh into the instance,you use the private key to create a digital signature and amazon use the corresponding public key to validate the digital signature 
     #Amazon does not provide keys pairs for your account you must create them 
     keypair: "{{ item.keypair }}"
     group: "{{ item.group }}"
     instance_type: "{{ item.instance_type }}"
     image: "{{ item.image }}"
     instance_tags: "{{ item.instance_tags }}"
     count: "{{ item.count }}"
     wait: true
    register: ec2
    with_items: ec2_instances
#an ec2-classic instance receives a public IPV4 address(to have access to internet)
#an ec2-classic instance receives a private IPV4 address from the EC2-Classic range each time it's started
#an elastic ip address is dissociated from your instance when you stop it 
#an elastic ip address is a public ip address that you can take control of it: you can remove it and re-associate it to another when the instance behind that ip address is failed , it's a replacement for public ip address(it's reachable over the internet + this advantage)
